/*
 * Tanyi Bot open api
 * tanyibot api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CallIntercept
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-08-02T19:07:40.908Z[GMT]")
public class CallIntercept {
  public static final String SERIALIZED_NAME_TENANT_CALL_INTERCEPT_ID = "tenantCallInterceptId";
  @SerializedName(SERIALIZED_NAME_TENANT_CALL_INTERCEPT_ID)
  private Long tenantCallInterceptId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_CALL_OUT_RESTRICT = "callOutRestrict";
  @SerializedName(SERIALIZED_NAME_CALL_OUT_RESTRICT)
  private String callOutRestrict;

  public static final String SERIALIZED_NAME_CALL_OUT_COUNT = "callOutCount";
  @SerializedName(SERIALIZED_NAME_CALL_OUT_COUNT)
  private Integer callOutCount;

  public static final String SERIALIZED_NAME_CALL_OUT_DAYS = "callOutDays";
  @SerializedName(SERIALIZED_NAME_CALL_OUT_DAYS)
  private Integer callOutDays;

  public static final String SERIALIZED_NAME_NOT_EXIST_DAYS = "notExistDays";
  @SerializedName(SERIALIZED_NAME_NOT_EXIST_DAYS)
  private Integer notExistDays;

  public static final String SERIALIZED_NAME_NOT_SERVICE_DAYS = "notServiceDays";
  @SerializedName(SERIALIZED_NAME_NOT_SERVICE_DAYS)
  private Integer notServiceDays;

  /**
   * 生效范围 ALL 全网 TENANT 公司内部
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    ALL("ALL"),
    
    TENANT("TENANT");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  /**
   * 拦截组来源 SYSTEM 系统规则 CUSTOM 自定义规则
   */
  @JsonAdapter(SourceEnum.Adapter.class)
  public enum SourceEnum {
    SYSTEM("SYSTEM"),
    
    CUSTOM("CUSTOM");

    private String value;

    SourceEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SourceEnum fromValue(String value) {
      for (SourceEnum b : SourceEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SourceEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SourceEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SourceEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SourceEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_SOURCE = "source";
  @SerializedName(SERIALIZED_NAME_SOURCE)
  private SourceEnum source;

  public static final String SERIALIZED_NAME_DEFAULT_STATUS = "defaultStatus";
  @SerializedName(SERIALIZED_NAME_DEFAULT_STATUS)
  private Boolean defaultStatus;


  public CallIntercept tenantCallInterceptId(Long tenantCallInterceptId) {
    
    this.tenantCallInterceptId = tenantCallInterceptId;
    return this;
  }

   /**
   * 拦截组Id
   * @return tenantCallInterceptId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "拦截组Id")

  public Long getTenantCallInterceptId() {
    return tenantCallInterceptId;
  }


  public void setTenantCallInterceptId(Long tenantCallInterceptId) {
    this.tenantCallInterceptId = tenantCallInterceptId;
  }


  public CallIntercept name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * 拦截组名称
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "拦截组名称")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public CallIntercept callOutRestrict(String callOutRestrict) {
    
    this.callOutRestrict = callOutRestrict;
    return this;
  }

   /**
   * 是否开启外呼上限设置(YES 开启 NO 不开启)
   * @return callOutRestrict
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "是否开启外呼上限设置(YES 开启 NO 不开启)")

  public String getCallOutRestrict() {
    return callOutRestrict;
  }


  public void setCallOutRestrict(String callOutRestrict) {
    this.callOutRestrict = callOutRestrict;
  }


  public CallIntercept callOutCount(Integer callOutCount) {
    
    this.callOutCount = callOutCount;
    return this;
  }

   /**
   * 外呼次数上限限制
   * @return callOutCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "外呼次数上限限制")

  public Integer getCallOutCount() {
    return callOutCount;
  }


  public void setCallOutCount(Integer callOutCount) {
    this.callOutCount = callOutCount;
  }


  public CallIntercept callOutDays(Integer callOutDays) {
    
    this.callOutDays = callOutDays;
    return this;
  }

   /**
   * 外呼次数天数内限制
   * @return callOutDays
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "外呼次数天数内限制")

  public Integer getCallOutDays() {
    return callOutDays;
  }


  public void setCallOutDays(Integer callOutDays) {
    this.callOutDays = callOutDays;
  }


  public CallIntercept notExistDays(Integer notExistDays) {
    
    this.notExistDays = notExistDays;
    return this;
  }

   /**
   * 空号天数限制 0为取消
   * @return notExistDays
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "空号天数限制 0为取消")

  public Integer getNotExistDays() {
    return notExistDays;
  }


  public void setNotExistDays(Integer notExistDays) {
    this.notExistDays = notExistDays;
  }


  public CallIntercept notServiceDays(Integer notServiceDays) {
    
    this.notServiceDays = notServiceDays;
    return this;
  }

   /**
   * 停机天数限制 0为取消
   * @return notServiceDays
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "停机天数限制 0为取消")

  public Integer getNotServiceDays() {
    return notServiceDays;
  }


  public void setNotServiceDays(Integer notServiceDays) {
    this.notServiceDays = notServiceDays;
  }


  public CallIntercept type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * 生效范围 ALL 全网 TENANT 公司内部
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "生效范围 ALL 全网 TENANT 公司内部")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public CallIntercept source(SourceEnum source) {
    
    this.source = source;
    return this;
  }

   /**
   * 拦截组来源 SYSTEM 系统规则 CUSTOM 自定义规则
   * @return source
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "拦截组来源 SYSTEM 系统规则 CUSTOM 自定义规则")

  public SourceEnum getSource() {
    return source;
  }


  public void setSource(SourceEnum source) {
    this.source = source;
  }


  public CallIntercept defaultStatus(Boolean defaultStatus) {
    
    this.defaultStatus = defaultStatus;
    return this;
  }

   /**
   * 是否默认规则
   * @return defaultStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "是否默认规则")

  public Boolean getDefaultStatus() {
    return defaultStatus;
  }


  public void setDefaultStatus(Boolean defaultStatus) {
    this.defaultStatus = defaultStatus;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CallIntercept callIntercept = (CallIntercept) o;
    return Objects.equals(this.tenantCallInterceptId, callIntercept.tenantCallInterceptId) &&
        Objects.equals(this.name, callIntercept.name) &&
        Objects.equals(this.callOutRestrict, callIntercept.callOutRestrict) &&
        Objects.equals(this.callOutCount, callIntercept.callOutCount) &&
        Objects.equals(this.callOutDays, callIntercept.callOutDays) &&
        Objects.equals(this.notExistDays, callIntercept.notExistDays) &&
        Objects.equals(this.notServiceDays, callIntercept.notServiceDays) &&
        Objects.equals(this.type, callIntercept.type) &&
        Objects.equals(this.source, callIntercept.source) &&
        Objects.equals(this.defaultStatus, callIntercept.defaultStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tenantCallInterceptId, name, callOutRestrict, callOutCount, callOutDays, notExistDays, notServiceDays, type, source, defaultStatus);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CallIntercept {\n");
    sb.append("    tenantCallInterceptId: ").append(toIndentedString(tenantCallInterceptId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    callOutRestrict: ").append(toIndentedString(callOutRestrict)).append("\n");
    sb.append("    callOutCount: ").append(toIndentedString(callOutCount)).append("\n");
    sb.append("    callOutDays: ").append(toIndentedString(callOutDays)).append("\n");
    sb.append("    notExistDays: ").append(toIndentedString(notExistDays)).append("\n");
    sb.append("    notServiceDays: ").append(toIndentedString(notServiceDays)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    defaultStatus: ").append(toIndentedString(defaultStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

