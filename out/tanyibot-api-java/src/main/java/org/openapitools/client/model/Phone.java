/*
 * Tanyi Bot open api
 * tanyibot api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.PhoneDeadArea;

/**
 * Phone
 */
@ApiModel(description = "Phone")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-08-02T19:07:40.908Z[GMT]")
public class Phone {
  public static final String SERIALIZED_NAME_TENANT_PHONE_NUMBER_ID = "tenantPhoneNumberId";
  @SerializedName(SERIALIZED_NAME_TENANT_PHONE_NUMBER_ID)
  private Long tenantPhoneNumberId;

  public static final String SERIALIZED_NAME_PHONE_NUMBER = "phoneNumber";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
  private String phoneNumber;

  public static final String SERIALIZED_NAME_PHONE_NAME = "phoneName";
  @SerializedName(SERIALIZED_NAME_PHONE_NAME)
  private String phoneName;

  /**
   * 电话类型 (MOBILE，\&quot;手机\&quot;),(LANDLINE，\&quot;固话\&quot;),(UNFIXED_CALL，\&quot;无主叫\&quot;),(VOIP_DEVICE，\&quot;网关设备\&quot;), (CS_SEAT，\&quot;人工外呼\&quot;),(MESSAGE，\&quot;短信\&quot;),(CALL_POLICY_GROUP，\&quot;外呼策略组\&quot;)
   */
  @JsonAdapter(PhoneTypeEnum.Adapter.class)
  public enum PhoneTypeEnum {
    MOBILE("MOBILE"),
    
    LANDLINE("LANDLINE"),
    
    UNFIXED_CALL("UNFIXED_CALL"),
    
    VOIP_DEVICE("VOIP_DEVICE"),
    
    CS_SEAT("CS_SEAT"),
    
    MESSAGE("MESSAGE"),
    
    CALL_POLICY_GROUP("CALL_POLICY_GROUP");

    private String value;

    PhoneTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PhoneTypeEnum fromValue(String value) {
      for (PhoneTypeEnum b : PhoneTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PhoneTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PhoneTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PhoneTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PhoneTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_PHONE_TYPE = "phoneType";
  @SerializedName(SERIALIZED_NAME_PHONE_TYPE)
  private PhoneTypeEnum phoneType;

  public static final String SERIALIZED_NAME_LOCAL_BILL_RATE = "localBillRate";
  @SerializedName(SERIALIZED_NAME_LOCAL_BILL_RATE)
  private Integer localBillRate;

  public static final String SERIALIZED_NAME_OTHER_BILL_RATE = "otherBillRate";
  @SerializedName(SERIALIZED_NAME_OTHER_BILL_RATE)
  private Integer otherBillRate;

  public static final String SERIALIZED_NAME_CALL_OUT_INDUSTRY = "callOutIndustry";
  @SerializedName(SERIALIZED_NAME_CALL_OUT_INDUSTRY)
  private String callOutIndustry;

  public static final String SERIALIZED_NAME_AREA_CODE = "areaCode";
  @SerializedName(SERIALIZED_NAME_AREA_CODE)
  private String areaCode;

  public static final String SERIALIZED_NAME_PROVINCE = "province";
  @SerializedName(SERIALIZED_NAME_PROVINCE)
  private String province;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_DEAD_AREA = "deadArea";
  @SerializedName(SERIALIZED_NAME_DEAD_AREA)
  private List<PhoneDeadArea> deadArea = null;

  public static final String SERIALIZED_NAME_TENANT_ID = "tenantId";
  @SerializedName(SERIALIZED_NAME_TENANT_ID)
  private Long tenantId;

  public static final String SERIALIZED_NAME_CONCURRENCY = "concurrency";
  @SerializedName(SERIALIZED_NAME_CONCURRENCY)
  private Integer concurrency;

  public static final String SERIALIZED_NAME_PHONE_NUMBER_ID = "phoneNumberId";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER_ID)
  private Integer phoneNumberId;

  public static final String SERIALIZED_NAME_ACCOUNT_FARE = "accountFare";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_FARE)
  private Integer accountFare;

  public static final String SERIALIZED_NAME_ENABLED_STATUS = "enabledStatus";
  @SerializedName(SERIALIZED_NAME_ENABLED_STATUS)
  private Integer enabledStatus;

  public static final String SERIALIZED_NAME_MONTHLY_BILL_RATE = "monthlyBillRate";
  @SerializedName(SERIALIZED_NAME_MONTHLY_BILL_RATE)
  private Integer monthlyBillRate;

  public static final String SERIALIZED_NAME_CALL_IN_LOCAL_BILL_RATE = "callInLocalBillRate";
  @SerializedName(SERIALIZED_NAME_CALL_IN_LOCAL_BILL_RATE)
  private Integer callInLocalBillRate;

  public static final String SERIALIZED_NAME_CALL_IN_OTHER_BILL_RATE = "callInOtherBillRate";
  @SerializedName(SERIALIZED_NAME_CALL_IN_OTHER_BILL_RATE)
  private Integer callInOtherBillRate;

  /**
   * 呼入计费方式 (MONTHLY，\&quot;按月租计费\&quot;),(CHAT_TIME，\&quot;按通话时长(分钟)计费\&quot;)
   */
  @JsonAdapter(CallInBillModeEnum.Adapter.class)
  public enum CallInBillModeEnum {
    MONTHLY("MONTHLY"),
    
    CHAT_TIME("CHAT_TIME");

    private String value;

    CallInBillModeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CallInBillModeEnum fromValue(String value) {
      for (CallInBillModeEnum b : CallInBillModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CallInBillModeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CallInBillModeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CallInBillModeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CallInBillModeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CALL_IN_BILL_MODE = "callInBillMode";
  @SerializedName(SERIALIZED_NAME_CALL_IN_BILL_MODE)
  private CallInBillModeEnum callInBillMode;

  public static final String SERIALIZED_NAME_LAST_HEART_BEAT_TIME = "lastHeartBeatTime";
  @SerializedName(SERIALIZED_NAME_LAST_HEART_BEAT_TIME)
  private String lastHeartBeatTime;

  public static final String SERIALIZED_NAME_CONCURRENCE_LIMIT = "concurrenceLimit";
  @SerializedName(SERIALIZED_NAME_CONCURRENCE_LIMIT)
  private Integer concurrenceLimit;

  public static final String SERIALIZED_NAME_REMARK = "remark";
  @SerializedName(SERIALIZED_NAME_REMARK)
  private String remark;

  public static final String SERIALIZED_NAME_SIP_ACCOUNT = "sipAccount";
  @SerializedName(SERIALIZED_NAME_SIP_ACCOUNT)
  private String sipAccount;

  public static final String SERIALIZED_NAME_OWNER_NAME = "ownerName";
  @SerializedName(SERIALIZED_NAME_OWNER_NAME)
  private String ownerName;

  /**
   * 线路归属地显示方式（DEFAULT，\&quot;默认显示配置归属地\&quot;）,（RANDOM，\&quot;全国随机显示\&quot;）,（NO_DISPLAY，\&quot;不显示\&quot;）
   */
  @JsonAdapter(LocationDisplayTypeEnum.Adapter.class)
  public enum LocationDisplayTypeEnum {
    DEFAULT("DEFAULT"),
    
    RANDOM("RANDOM"),
    
    NO_DISPLAY("NO_DISPLAY");

    private String value;

    LocationDisplayTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LocationDisplayTypeEnum fromValue(String value) {
      for (LocationDisplayTypeEnum b : LocationDisplayTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<LocationDisplayTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LocationDisplayTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LocationDisplayTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return LocationDisplayTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_LOCATION_DISPLAY_TYPE = "locationDisplayType";
  @SerializedName(SERIALIZED_NAME_LOCATION_DISPLAY_TYPE)
  private LocationDisplayTypeEnum locationDisplayType;

  public static final String SERIALIZED_NAME_OWNER_TENANT_ID = "ownerTenantId";
  @SerializedName(SERIALIZED_NAME_OWNER_TENANT_ID)
  private Long ownerTenantId;


  public Phone tenantPhoneNumberId(Long tenantPhoneNumberId) {
    
    this.tenantPhoneNumberId = tenantPhoneNumberId;
    return this;
  }

   /**
   * 用户线路ID（代表绑给用户的虚拟线路）
   * @return tenantPhoneNumberId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "用户线路ID（代表绑给用户的虚拟线路）")

  public Long getTenantPhoneNumberId() {
    return tenantPhoneNumberId;
  }


  public void setTenantPhoneNumberId(Long tenantPhoneNumberId) {
    this.tenantPhoneNumberId = tenantPhoneNumberId;
  }


  public Phone phoneNumber(String phoneNumber) {
    
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * 电话号码
   * @return phoneNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "电话号码")

  public String getPhoneNumber() {
    return phoneNumber;
  }


  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public Phone phoneName(String phoneName) {
    
    this.phoneName = phoneName;
    return this;
  }

   /**
   * 电话号码名称
   * @return phoneName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "电话号码名称")

  public String getPhoneName() {
    return phoneName;
  }


  public void setPhoneName(String phoneName) {
    this.phoneName = phoneName;
  }


  public Phone phoneType(PhoneTypeEnum phoneType) {
    
    this.phoneType = phoneType;
    return this;
  }

   /**
   * 电话类型 (MOBILE，\&quot;手机\&quot;),(LANDLINE，\&quot;固话\&quot;),(UNFIXED_CALL，\&quot;无主叫\&quot;),(VOIP_DEVICE，\&quot;网关设备\&quot;), (CS_SEAT，\&quot;人工外呼\&quot;),(MESSAGE，\&quot;短信\&quot;),(CALL_POLICY_GROUP，\&quot;外呼策略组\&quot;)
   * @return phoneType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "电话类型 (MOBILE，\"手机\"),(LANDLINE，\"固话\"),(UNFIXED_CALL，\"无主叫\"),(VOIP_DEVICE，\"网关设备\"), (CS_SEAT，\"人工外呼\"),(MESSAGE，\"短信\"),(CALL_POLICY_GROUP，\"外呼策略组\")")

  public PhoneTypeEnum getPhoneType() {
    return phoneType;
  }


  public void setPhoneType(PhoneTypeEnum phoneType) {
    this.phoneType = phoneType;
  }


  public Phone localBillRate(Integer localBillRate) {
    
    this.localBillRate = localBillRate;
    return this;
  }

   /**
   * 本地话费（单位：厘）
   * @return localBillRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "本地话费（单位：厘）")

  public Integer getLocalBillRate() {
    return localBillRate;
  }


  public void setLocalBillRate(Integer localBillRate) {
    this.localBillRate = localBillRate;
  }


  public Phone otherBillRate(Integer otherBillRate) {
    
    this.otherBillRate = otherBillRate;
    return this;
  }

   /**
   * 外地话费（单位：厘）
   * @return otherBillRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "外地话费（单位：厘）")

  public Integer getOtherBillRate() {
    return otherBillRate;
  }


  public void setOtherBillRate(Integer otherBillRate) {
    this.otherBillRate = otherBillRate;
  }


  public Phone callOutIndustry(String callOutIndustry) {
    
    this.callOutIndustry = callOutIndustry;
    return this;
  }

   /**
   * (FINANCE, \&quot;金融\&quot;),(OTHER, \&quot;其他\&quot;)
   * @return callOutIndustry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "(FINANCE, \"金融\"),(OTHER, \"其他\")")

  public String getCallOutIndustry() {
    return callOutIndustry;
  }


  public void setCallOutIndustry(String callOutIndustry) {
    this.callOutIndustry = callOutIndustry;
  }


  public Phone areaCode(String areaCode) {
    
    this.areaCode = areaCode;
    return this;
  }

   /**
   * 归属地区号
   * @return areaCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "归属地区号")

  public String getAreaCode() {
    return areaCode;
  }


  public void setAreaCode(String areaCode) {
    this.areaCode = areaCode;
  }


  public Phone province(String province) {
    
    this.province = province;
    return this;
  }

   /**
   * 归属地省
   * @return province
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "归属地省")

  public String getProvince() {
    return province;
  }


  public void setProvince(String province) {
    this.province = province;
  }


  public Phone city(String city) {
    
    this.city = city;
    return this;
  }

   /**
   * 归属地市
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "归属地市")

  public String getCity() {
    return city;
  }


  public void setCity(String city) {
    this.city = city;
  }


  public Phone deadArea(List<PhoneDeadArea> deadArea) {
    
    this.deadArea = deadArea;
    return this;
  }

  public Phone addDeadAreaItem(PhoneDeadArea deadAreaItem) {
    if (this.deadArea == null) {
      this.deadArea = new ArrayList<PhoneDeadArea>();
    }
    this.deadArea.add(deadAreaItem);
    return this;
  }

   /**
   * 无法外呼地区
   * @return deadArea
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "无法外呼地区")

  public List<PhoneDeadArea> getDeadArea() {
    return deadArea;
  }


  public void setDeadArea(List<PhoneDeadArea> deadArea) {
    this.deadArea = deadArea;
  }


  public Phone tenantId(Long tenantId) {
    
    this.tenantId = tenantId;
    return this;
  }

   /**
   * Get tenantId
   * @return tenantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getTenantId() {
    return tenantId;
  }


  public void setTenantId(Long tenantId) {
    this.tenantId = tenantId;
  }


  public Phone concurrency(Integer concurrency) {
    
    this.concurrency = concurrency;
    return this;
  }

   /**
   * Get concurrency
   * @return concurrency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getConcurrency() {
    return concurrency;
  }


  public void setConcurrency(Integer concurrency) {
    this.concurrency = concurrency;
  }


  public Phone phoneNumberId(Integer phoneNumberId) {
    
    this.phoneNumberId = phoneNumberId;
    return this;
  }

   /**
   * 线路ID（代表实际的线路）
   * @return phoneNumberId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "线路ID（代表实际的线路）")

  public Integer getPhoneNumberId() {
    return phoneNumberId;
  }


  public void setPhoneNumberId(Integer phoneNumberId) {
    this.phoneNumberId = phoneNumberId;
  }


  public Phone accountFare(Integer accountFare) {
    
    this.accountFare = accountFare;
    return this;
  }

   /**
   * 账户余额，单位（厘）
   * @return accountFare
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "账户余额，单位（厘）")

  public Integer getAccountFare() {
    return accountFare;
  }


  public void setAccountFare(Integer accountFare) {
    this.accountFare = accountFare;
  }


  public Phone enabledStatus(Integer enabledStatus) {
    
    this.enabledStatus = enabledStatus;
    return this;
  }

   /**
   * 是否启用，1为启用，0为禁用
   * @return enabledStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "是否启用，1为启用，0为禁用")

  public Integer getEnabledStatus() {
    return enabledStatus;
  }


  public void setEnabledStatus(Integer enabledStatus) {
    this.enabledStatus = enabledStatus;
  }


  public Phone monthlyBillRate(Integer monthlyBillRate) {
    
    this.monthlyBillRate = monthlyBillRate;
    return this;
  }

   /**
   * 呼入月租费率，单位（厘）
   * @return monthlyBillRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "呼入月租费率，单位（厘）")

  public Integer getMonthlyBillRate() {
    return monthlyBillRate;
  }


  public void setMonthlyBillRate(Integer monthlyBillRate) {
    this.monthlyBillRate = monthlyBillRate;
  }


  public Phone callInLocalBillRate(Integer callInLocalBillRate) {
    
    this.callInLocalBillRate = callInLocalBillRate;
    return this;
  }

   /**
   * 呼入本地通话费用，单位（厘）
   * @return callInLocalBillRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "呼入本地通话费用，单位（厘）")

  public Integer getCallInLocalBillRate() {
    return callInLocalBillRate;
  }


  public void setCallInLocalBillRate(Integer callInLocalBillRate) {
    this.callInLocalBillRate = callInLocalBillRate;
  }


  public Phone callInOtherBillRate(Integer callInOtherBillRate) {
    
    this.callInOtherBillRate = callInOtherBillRate;
    return this;
  }

   /**
   * 呼入外地通话费用，单位（厘）
   * @return callInOtherBillRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "呼入外地通话费用，单位（厘）")

  public Integer getCallInOtherBillRate() {
    return callInOtherBillRate;
  }


  public void setCallInOtherBillRate(Integer callInOtherBillRate) {
    this.callInOtherBillRate = callInOtherBillRate;
  }


  public Phone callInBillMode(CallInBillModeEnum callInBillMode) {
    
    this.callInBillMode = callInBillMode;
    return this;
  }

   /**
   * 呼入计费方式 (MONTHLY，\&quot;按月租计费\&quot;),(CHAT_TIME，\&quot;按通话时长(分钟)计费\&quot;)
   * @return callInBillMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "呼入计费方式 (MONTHLY，\"按月租计费\"),(CHAT_TIME，\"按通话时长(分钟)计费\")")

  public CallInBillModeEnum getCallInBillMode() {
    return callInBillMode;
  }


  public void setCallInBillMode(CallInBillModeEnum callInBillMode) {
    this.callInBillMode = callInBillMode;
  }


  public Phone lastHeartBeatTime(String lastHeartBeatTime) {
    
    this.lastHeartBeatTime = lastHeartBeatTime;
    return this;
  }

   /**
   * 最后外呼时间
   * @return lastHeartBeatTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "最后外呼时间")

  public String getLastHeartBeatTime() {
    return lastHeartBeatTime;
  }


  public void setLastHeartBeatTime(String lastHeartBeatTime) {
    this.lastHeartBeatTime = lastHeartBeatTime;
  }


  public Phone concurrenceLimit(Integer concurrenceLimit) {
    
    this.concurrenceLimit = concurrenceLimit;
    return this;
  }

   /**
   * 并发数限制
   * @return concurrenceLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "并发数限制")

  public Integer getConcurrenceLimit() {
    return concurrenceLimit;
  }


  public void setConcurrenceLimit(Integer concurrenceLimit) {
    this.concurrenceLimit = concurrenceLimit;
  }


  public Phone remark(String remark) {
    
    this.remark = remark;
    return this;
  }

   /**
   * 备注
   * @return remark
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "备注")

  public String getRemark() {
    return remark;
  }


  public void setRemark(String remark) {
    this.remark = remark;
  }


  public Phone sipAccount(String sipAccount) {
    
    this.sipAccount = sipAccount;
    return this;
  }

   /**
   * SIP账号
   * @return sipAccount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "SIP账号")

  public String getSipAccount() {
    return sipAccount;
  }


  public void setSipAccount(String sipAccount) {
    this.sipAccount = sipAccount;
  }


  public Phone ownerName(String ownerName) {
    
    this.ownerName = ownerName;
    return this;
  }

   /**
   * 归属公司名称
   * @return ownerName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "归属公司名称")

  public String getOwnerName() {
    return ownerName;
  }


  public void setOwnerName(String ownerName) {
    this.ownerName = ownerName;
  }


  public Phone locationDisplayType(LocationDisplayTypeEnum locationDisplayType) {
    
    this.locationDisplayType = locationDisplayType;
    return this;
  }

   /**
   * 线路归属地显示方式（DEFAULT，\&quot;默认显示配置归属地\&quot;）,（RANDOM，\&quot;全国随机显示\&quot;）,（NO_DISPLAY，\&quot;不显示\&quot;）
   * @return locationDisplayType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "线路归属地显示方式（DEFAULT，\"默认显示配置归属地\"）,（RANDOM，\"全国随机显示\"）,（NO_DISPLAY，\"不显示\"）")

  public LocationDisplayTypeEnum getLocationDisplayType() {
    return locationDisplayType;
  }


  public void setLocationDisplayType(LocationDisplayTypeEnum locationDisplayType) {
    this.locationDisplayType = locationDisplayType;
  }


  public Phone ownerTenantId(Long ownerTenantId) {
    
    this.ownerTenantId = ownerTenantId;
    return this;
  }

   /**
   * 归属公司ID
   * @return ownerTenantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "归属公司ID")

  public Long getOwnerTenantId() {
    return ownerTenantId;
  }


  public void setOwnerTenantId(Long ownerTenantId) {
    this.ownerTenantId = ownerTenantId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Phone phone = (Phone) o;
    return Objects.equals(this.tenantPhoneNumberId, phone.tenantPhoneNumberId) &&
        Objects.equals(this.phoneNumber, phone.phoneNumber) &&
        Objects.equals(this.phoneName, phone.phoneName) &&
        Objects.equals(this.phoneType, phone.phoneType) &&
        Objects.equals(this.localBillRate, phone.localBillRate) &&
        Objects.equals(this.otherBillRate, phone.otherBillRate) &&
        Objects.equals(this.callOutIndustry, phone.callOutIndustry) &&
        Objects.equals(this.areaCode, phone.areaCode) &&
        Objects.equals(this.province, phone.province) &&
        Objects.equals(this.city, phone.city) &&
        Objects.equals(this.deadArea, phone.deadArea) &&
        Objects.equals(this.tenantId, phone.tenantId) &&
        Objects.equals(this.concurrency, phone.concurrency) &&
        Objects.equals(this.phoneNumberId, phone.phoneNumberId) &&
        Objects.equals(this.accountFare, phone.accountFare) &&
        Objects.equals(this.enabledStatus, phone.enabledStatus) &&
        Objects.equals(this.monthlyBillRate, phone.monthlyBillRate) &&
        Objects.equals(this.callInLocalBillRate, phone.callInLocalBillRate) &&
        Objects.equals(this.callInOtherBillRate, phone.callInOtherBillRate) &&
        Objects.equals(this.callInBillMode, phone.callInBillMode) &&
        Objects.equals(this.lastHeartBeatTime, phone.lastHeartBeatTime) &&
        Objects.equals(this.concurrenceLimit, phone.concurrenceLimit) &&
        Objects.equals(this.remark, phone.remark) &&
        Objects.equals(this.sipAccount, phone.sipAccount) &&
        Objects.equals(this.ownerName, phone.ownerName) &&
        Objects.equals(this.locationDisplayType, phone.locationDisplayType) &&
        Objects.equals(this.ownerTenantId, phone.ownerTenantId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tenantPhoneNumberId, phoneNumber, phoneName, phoneType, localBillRate, otherBillRate, callOutIndustry, areaCode, province, city, deadArea, tenantId, concurrency, phoneNumberId, accountFare, enabledStatus, monthlyBillRate, callInLocalBillRate, callInOtherBillRate, callInBillMode, lastHeartBeatTime, concurrenceLimit, remark, sipAccount, ownerName, locationDisplayType, ownerTenantId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Phone {\n");
    sb.append("    tenantPhoneNumberId: ").append(toIndentedString(tenantPhoneNumberId)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    phoneName: ").append(toIndentedString(phoneName)).append("\n");
    sb.append("    phoneType: ").append(toIndentedString(phoneType)).append("\n");
    sb.append("    localBillRate: ").append(toIndentedString(localBillRate)).append("\n");
    sb.append("    otherBillRate: ").append(toIndentedString(otherBillRate)).append("\n");
    sb.append("    callOutIndustry: ").append(toIndentedString(callOutIndustry)).append("\n");
    sb.append("    areaCode: ").append(toIndentedString(areaCode)).append("\n");
    sb.append("    province: ").append(toIndentedString(province)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    deadArea: ").append(toIndentedString(deadArea)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    concurrency: ").append(toIndentedString(concurrency)).append("\n");
    sb.append("    phoneNumberId: ").append(toIndentedString(phoneNumberId)).append("\n");
    sb.append("    accountFare: ").append(toIndentedString(accountFare)).append("\n");
    sb.append("    enabledStatus: ").append(toIndentedString(enabledStatus)).append("\n");
    sb.append("    monthlyBillRate: ").append(toIndentedString(monthlyBillRate)).append("\n");
    sb.append("    callInLocalBillRate: ").append(toIndentedString(callInLocalBillRate)).append("\n");
    sb.append("    callInOtherBillRate: ").append(toIndentedString(callInOtherBillRate)).append("\n");
    sb.append("    callInBillMode: ").append(toIndentedString(callInBillMode)).append("\n");
    sb.append("    lastHeartBeatTime: ").append(toIndentedString(lastHeartBeatTime)).append("\n");
    sb.append("    concurrenceLimit: ").append(toIndentedString(concurrenceLimit)).append("\n");
    sb.append("    remark: ").append(toIndentedString(remark)).append("\n");
    sb.append("    sipAccount: ").append(toIndentedString(sipAccount)).append("\n");
    sb.append("    ownerName: ").append(toIndentedString(ownerName)).append("\n");
    sb.append("    locationDisplayType: ").append(toIndentedString(locationDisplayType)).append("\n");
    sb.append("    ownerTenantId: ").append(toIndentedString(ownerTenantId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

