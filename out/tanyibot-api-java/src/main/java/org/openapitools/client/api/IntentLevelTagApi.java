/*
 * Tanyi Bot open api
 * tanyibot api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.GetIntentLevelTagRsp;
import org.openapitools.client.model.GetUsedIntentLevelTagListRsp;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class IntentLevelTagApi {
    private ApiClient localVarApiClient;

    public IntentLevelTagApi() {
        this(Configuration.getDefaultApiClient());
    }

    public IntentLevelTagApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    /**
     * Build call for getUsedIntentLevelTagList
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getUsedIntentLevelTagListCall(final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/intentLevelTag/getUsedIntentLevelTagList";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getUsedIntentLevelTagListValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = getUsedIntentLevelTagListCall(_callback);
        return localVarCall;

    }

    /**
     * 获取已使用的意向标签组列表接口
     * 通过此接口可以获取已使用的所有意向标签组
     * @return GetUsedIntentLevelTagListRsp
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public GetUsedIntentLevelTagListRsp getUsedIntentLevelTagList() throws ApiException {
        ApiResponse<GetUsedIntentLevelTagListRsp> localVarResp = getUsedIntentLevelTagListWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 获取已使用的意向标签组列表接口
     * 通过此接口可以获取已使用的所有意向标签组
     * @return ApiResponse&lt;GetUsedIntentLevelTagListRsp&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetUsedIntentLevelTagListRsp> getUsedIntentLevelTagListWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = getUsedIntentLevelTagListValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<GetUsedIntentLevelTagListRsp>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取已使用的意向标签组列表接口 (asynchronously)
     * 通过此接口可以获取已使用的所有意向标签组
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getUsedIntentLevelTagListAsync(final ApiCallback<GetUsedIntentLevelTagListRsp> _callback) throws ApiException {

        okhttp3.Call localVarCall = getUsedIntentLevelTagListValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<GetUsedIntentLevelTagListRsp>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for intentLevelTagGetIntentLevelTagGet
     * @param intentLevelTagId 标签分组Id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call intentLevelTagGetIntentLevelTagGetCall(Integer intentLevelTagId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/intentLevelTag/getIntentLevelTag";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (intentLevelTagId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("intentLevelTagId", intentLevelTagId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call intentLevelTagGetIntentLevelTagGetValidateBeforeCall(Integer intentLevelTagId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'intentLevelTagId' is set
        if (intentLevelTagId == null) {
            throw new ApiException("Missing the required parameter 'intentLevelTagId' when calling intentLevelTagGetIntentLevelTagGet(Async)");
        }
        

        okhttp3.Call localVarCall = intentLevelTagGetIntentLevelTagGetCall(intentLevelTagId, _callback);
        return localVarCall;

    }

    /**
     * 获取意向标签内容
     * 通过接口可以获取指定意向标签分组的内容
     * @param intentLevelTagId 标签分组Id (required)
     * @return GetIntentLevelTagRsp
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public GetIntentLevelTagRsp intentLevelTagGetIntentLevelTagGet(Integer intentLevelTagId) throws ApiException {
        ApiResponse<GetIntentLevelTagRsp> localVarResp = intentLevelTagGetIntentLevelTagGetWithHttpInfo(intentLevelTagId);
        return localVarResp.getData();
    }

    /**
     * 获取意向标签内容
     * 通过接口可以获取指定意向标签分组的内容
     * @param intentLevelTagId 标签分组Id (required)
     * @return ApiResponse&lt;GetIntentLevelTagRsp&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetIntentLevelTagRsp> intentLevelTagGetIntentLevelTagGetWithHttpInfo(Integer intentLevelTagId) throws ApiException {
        okhttp3.Call localVarCall = intentLevelTagGetIntentLevelTagGetValidateBeforeCall(intentLevelTagId, null);
        Type localVarReturnType = new TypeToken<GetIntentLevelTagRsp>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取意向标签内容 (asynchronously)
     * 通过接口可以获取指定意向标签分组的内容
     * @param intentLevelTagId 标签分组Id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call intentLevelTagGetIntentLevelTagGetAsync(Integer intentLevelTagId, final ApiCallback<GetIntentLevelTagRsp> _callback) throws ApiException {

        okhttp3.Call localVarCall = intentLevelTagGetIntentLevelTagGetValidateBeforeCall(intentLevelTagId, _callback);
        Type localVarReturnType = new TypeToken<GetIntentLevelTagRsp>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
