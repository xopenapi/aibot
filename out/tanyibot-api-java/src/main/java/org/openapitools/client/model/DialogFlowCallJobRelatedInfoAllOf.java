/*
 * Tanyi Bot open api
 * tanyibot api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * DialogFlowCallJobRelatedInfoAllOf
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-08-02T19:07:40.908Z[GMT]")
public class DialogFlowCallJobRelatedInfoAllOf {
  public static final String SERIALIZED_NAME_PLACEHOLDER_EXIST = "placeholderExist";
  @SerializedName(SERIALIZED_NAME_PLACEHOLDER_EXIST)
  private Boolean placeholderExist;

  public static final String SERIALIZED_NAME_JUMP_TO_HUMAN_SERVICE_EXIST = "jumpToHumanServiceExist";
  @SerializedName(SERIALIZED_NAME_JUMP_TO_HUMAN_SERVICE_EXIST)
  private Boolean jumpToHumanServiceExist;

  public static final String SERIALIZED_NAME_HUMAN_INTERVENTION_EXIST = "humanInterventionExist";
  @SerializedName(SERIALIZED_NAME_HUMAN_INTERVENTION_EXIST)
  private Boolean humanInterventionExist;


  public DialogFlowCallJobRelatedInfoAllOf placeholderExist(Boolean placeholderExist) {
    
    this.placeholderExist = placeholderExist;
    return this;
  }

   /**
   * 是否有变量名
   * @return placeholderExist
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "是否有变量名")

  public Boolean getPlaceholderExist() {
    return placeholderExist;
  }


  public void setPlaceholderExist(Boolean placeholderExist) {
    this.placeholderExist = placeholderExist;
  }


  public DialogFlowCallJobRelatedInfoAllOf jumpToHumanServiceExist(Boolean jumpToHumanServiceExist) {
    
    this.jumpToHumanServiceExist = jumpToHumanServiceExist;
    return this;
  }

   /**
   * 是否转人工标识
   * @return jumpToHumanServiceExist
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "是否转人工标识")

  public Boolean getJumpToHumanServiceExist() {
    return jumpToHumanServiceExist;
  }


  public void setJumpToHumanServiceExist(Boolean jumpToHumanServiceExist) {
    this.jumpToHumanServiceExist = jumpToHumanServiceExist;
  }


  public DialogFlowCallJobRelatedInfoAllOf humanInterventionExist(Boolean humanInterventionExist) {
    
    this.humanInterventionExist = humanInterventionExist;
    return this;
  }

   /**
   * 是否有人工介入标识
   * @return humanInterventionExist
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "是否有人工介入标识")

  public Boolean getHumanInterventionExist() {
    return humanInterventionExist;
  }


  public void setHumanInterventionExist(Boolean humanInterventionExist) {
    this.humanInterventionExist = humanInterventionExist;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DialogFlowCallJobRelatedInfoAllOf dialogFlowCallJobRelatedInfoAllOf = (DialogFlowCallJobRelatedInfoAllOf) o;
    return Objects.equals(this.placeholderExist, dialogFlowCallJobRelatedInfoAllOf.placeholderExist) &&
        Objects.equals(this.jumpToHumanServiceExist, dialogFlowCallJobRelatedInfoAllOf.jumpToHumanServiceExist) &&
        Objects.equals(this.humanInterventionExist, dialogFlowCallJobRelatedInfoAllOf.humanInterventionExist);
  }

  @Override
  public int hashCode() {
    return Objects.hash(placeholderExist, jumpToHumanServiceExist, humanInterventionExist);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DialogFlowCallJobRelatedInfoAllOf {\n");
    sb.append("    placeholderExist: ").append(toIndentedString(placeholderExist)).append("\n");
    sb.append("    jumpToHumanServiceExist: ").append(toIndentedString(jumpToHumanServiceExist)).append("\n");
    sb.append("    humanInterventionExist: ").append(toIndentedString(humanInterventionExist)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

