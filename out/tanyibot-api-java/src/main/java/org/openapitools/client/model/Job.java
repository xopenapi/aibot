/*
 * Tanyi Bot open api
 * tanyibot api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.RobotCallJob;

/**
 * Job
 */
@ApiModel(description = "Job")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-08-02T19:07:40.908Z[GMT]")
public class Job {
  public static final String SERIALIZED_NAME_CONCURRENCY_QUOTA = "concurrencyQuota";
  @SerializedName(SERIALIZED_NAME_CONCURRENCY_QUOTA)
  private Integer concurrencyQuota;

  public static final String SERIALIZED_NAME_JOB_PHONE_NUMBER_ID_LIST = "jobPhoneNumberIdList";
  @SerializedName(SERIALIZED_NAME_JOB_PHONE_NUMBER_ID_LIST)
  private List<Long> jobPhoneNumberIdList = null;

  public static final String SERIALIZED_NAME_TRANSFER_PHONE_NUMBER = "transferPhoneNumber";
  @SerializedName(SERIALIZED_NAME_TRANSFER_PHONE_NUMBER)
  private List<String> transferPhoneNumber = null;

  public static final String SERIALIZED_NAME_ROBOT_CALL_JOB = "robotCallJob";
  @SerializedName(SERIALIZED_NAME_ROBOT_CALL_JOB)
  private RobotCallJob robotCallJob;


  public Job concurrencyQuota(Integer concurrencyQuota) {
    
    this.concurrencyQuota = concurrencyQuota;
    return this;
  }

   /**
   * 并发数 开启一线多并发时可比robotCount大，不开启一线多并发是与robotCount相同（线路类型为手机号的时候可不传）
   * @return concurrencyQuota
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "并发数 开启一线多并发时可比robotCount大，不开启一线多并发是与robotCount相同（线路类型为手机号的时候可不传）")

  public Integer getConcurrencyQuota() {
    return concurrencyQuota;
  }


  public void setConcurrencyQuota(Integer concurrencyQuota) {
    this.concurrencyQuota = concurrencyQuota;
  }


  public Job jobPhoneNumberIdList(List<Long> jobPhoneNumberIdList) {
    
    this.jobPhoneNumberIdList = jobPhoneNumberIdList;
    return this;
  }

  public Job addJobPhoneNumberIdListItem(Long jobPhoneNumberIdListItem) {
    if (this.jobPhoneNumberIdList == null) {
      this.jobPhoneNumberIdList = new ArrayList<Long>();
    }
    this.jobPhoneNumberIdList.add(jobPhoneNumberIdListItem);
    return this;
  }

   /**
   * 通过获取外呼线路接口获取 tenant_phone_number_id,当类型是手机号的时候他的size代表机器人的个数，当类型非手机号的时候他的size只能是1；如果外呼方式选择的是外呼策略组，则里面内容为外呼策略组的id（size只能为1）
   * @return jobPhoneNumberIdList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "通过获取外呼线路接口获取 tenant_phone_number_id,当类型是手机号的时候他的size代表机器人的个数，当类型非手机号的时候他的size只能是1；如果外呼方式选择的是外呼策略组，则里面内容为外呼策略组的id（size只能为1）")

  public List<Long> getJobPhoneNumberIdList() {
    return jobPhoneNumberIdList;
  }


  public void setJobPhoneNumberIdList(List<Long> jobPhoneNumberIdList) {
    this.jobPhoneNumberIdList = jobPhoneNumberIdList;
  }


  public Job transferPhoneNumber(List<String> transferPhoneNumber) {
    
    this.transferPhoneNumber = transferPhoneNumber;
    return this;
  }

  public Job addTransferPhoneNumberItem(String transferPhoneNumberItem) {
    if (this.transferPhoneNumber == null) {
      this.transferPhoneNumber = new ArrayList<String>();
    }
    this.transferPhoneNumber.add(transferPhoneNumberItem);
    return this;
  }

   /**
   * 转人工号码,触发转人工时轮训号码列表
   * @return transferPhoneNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "转人工号码,触发转人工时轮训号码列表")

  public List<String> getTransferPhoneNumber() {
    return transferPhoneNumber;
  }


  public void setTransferPhoneNumber(List<String> transferPhoneNumber) {
    this.transferPhoneNumber = transferPhoneNumber;
  }


  public Job robotCallJob(RobotCallJob robotCallJob) {
    
    this.robotCallJob = robotCallJob;
    return this;
  }

   /**
   * Get robotCallJob
   * @return robotCallJob
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RobotCallJob getRobotCallJob() {
    return robotCallJob;
  }


  public void setRobotCallJob(RobotCallJob robotCallJob) {
    this.robotCallJob = robotCallJob;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Job job = (Job) o;
    return Objects.equals(this.concurrencyQuota, job.concurrencyQuota) &&
        Objects.equals(this.jobPhoneNumberIdList, job.jobPhoneNumberIdList) &&
        Objects.equals(this.transferPhoneNumber, job.transferPhoneNumber) &&
        Objects.equals(this.robotCallJob, job.robotCallJob);
  }

  @Override
  public int hashCode() {
    return Objects.hash(concurrencyQuota, jobPhoneNumberIdList, transferPhoneNumber, robotCallJob);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Job {\n");
    sb.append("    concurrencyQuota: ").append(toIndentedString(concurrencyQuota)).append("\n");
    sb.append("    jobPhoneNumberIdList: ").append(toIndentedString(jobPhoneNumberIdList)).append("\n");
    sb.append("    transferPhoneNumber: ").append(toIndentedString(transferPhoneNumber)).append("\n");
    sb.append("    robotCallJob: ").append(toIndentedString(robotCallJob)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

