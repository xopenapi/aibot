/*
 * Tanyi Bot open api
 * tanyibot api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.RobotCallJobInactiveTimeList;
import org.openapitools.client.model.WechatPushCondition;

/**
 * RobotCallJob
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-08-02T19:07:40.908Z[GMT]")
public class RobotCallJob {
  public static final String SERIALIZED_NAME_DIALOG_FLOW_ID = "dialogFlowId";
  @SerializedName(SERIALIZED_NAME_DIALOG_FLOW_ID)
  private Integer dialogFlowId;

  public static final String SERIALIZED_NAME_IS_PRIOR = "isPrior";
  @SerializedName(SERIALIZED_NAME_IS_PRIOR)
  private Boolean isPrior;

  public static final String SERIALIZED_NAME_ROBOT_CALL_JOB_ID = "robotCallJobId";
  @SerializedName(SERIALIZED_NAME_ROBOT_CALL_JOB_ID)
  private Long robotCallJobId;

  public static final String SERIALIZED_NAME_DAILY_END_TIME = "dailyEndTime";
  @SerializedName(SERIALIZED_NAME_DAILY_END_TIME)
  private String dailyEndTime;

  public static final String SERIALIZED_NAME_DAILY_START_TIME = "dailyStartTime";
  @SerializedName(SERIALIZED_NAME_DAILY_START_TIME)
  private String dailyStartTime;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_EARLY_WARNING_ALERT_USERS = "earlyWarningAlertUsers";
  @SerializedName(SERIALIZED_NAME_EARLY_WARNING_ALERT_USERS)
  private List<String> earlyWarningAlertUsers = null;

  public static final String SERIALIZED_NAME_INACTIVE_TIME_LIST = "inactiveTimeList";
  @SerializedName(SERIALIZED_NAME_INACTIVE_TIME_LIST)
  private List<RobotCallJobInactiveTimeList> inactiveTimeList = null;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  /**
   * 任务类型 (AUTO, \&quot;自动任务\&quot;),(MANUAL, \&quot;手动任务\&quot;);
   */
  @JsonAdapter(ModeEnum.Adapter.class)
  public enum ModeEnum {
    AUTO("AUTO"),
    
    MANUAL("MANUAL");

    private String value;

    ModeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ModeEnum fromValue(String value) {
      for (ModeEnum b : ModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ModeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ModeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ModeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ModeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_MODE = "mode";
  @SerializedName(SERIALIZED_NAME_MODE)
  private ModeEnum mode;

  /**
   * 号码类型 (MOBILE, \&quot;手机号码\&quot;),(LANDLINE, \&quot;固话\&quot;),(UNFIXED_CALL, \&quot;无主叫\&quot;), (CALL_POLICY_GROUP, \&quot;外呼策略组\&quot;)
   */
  @JsonAdapter(PhoneTypeEnum.Adapter.class)
  public enum PhoneTypeEnum {
    MOBILE("MOBILE"),
    
    LANDLINE("LANDLINE"),
    
    UNFIXED_CALL("UNFIXED_CALL"),
    
    CALL_POLICY_GROUP("CALL_POLICY_GROUP");

    private String value;

    PhoneTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PhoneTypeEnum fromValue(String value) {
      for (PhoneTypeEnum b : PhoneTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PhoneTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PhoneTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PhoneTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PhoneTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_PHONE_TYPE = "phoneType";
  @SerializedName(SERIALIZED_NAME_PHONE_TYPE)
  private PhoneTypeEnum phoneType;

  public static final String SERIALIZED_NAME_ROBOT_COUNT = "robotCount";
  @SerializedName(SERIALIZED_NAME_ROBOT_COUNT)
  private Integer robotCount;

  public static final String SERIALIZED_NAME_SMS_ALERT_LEVEL = "smsAlertLevel";
  @SerializedName(SERIALIZED_NAME_SMS_ALERT_LEVEL)
  private List<String> smsAlertLevel = null;

  public static final String SERIALIZED_NAME_SMS_TEMPLATE_ID = "smsTemplateId";
  @SerializedName(SERIALIZED_NAME_SMS_TEMPLATE_ID)
  private Integer smsTemplateId;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private String startTime;

  public static final String SERIALIZED_NAME_TENANT_ID = "tenantId";
  @SerializedName(SERIALIZED_NAME_TENANT_ID)
  private Long tenantId;

  public static final String SERIALIZED_NAME_SMS_ALERT_LEVEL_CODE = "smsAlertLevelCode";
  @SerializedName(SERIALIZED_NAME_SMS_ALERT_LEVEL_CODE)
  private List<Integer> smsAlertLevelCode = null;

  public static final String SERIALIZED_NAME_WECHAT_PUSH_CONDITION_LIST = "wechatPushConditionList";
  @SerializedName(SERIALIZED_NAME_WECHAT_PUSH_CONDITION_LIST)
  private List<WechatPushCondition> wechatPushConditionList = null;

  /**
   * Gets or Sets redialCondition
   */
  @JsonAdapter(RedialConditionEnum.Adapter.class)
  public enum RedialConditionEnum {
    CALL_LOSS("CALL_LOSS"),
    
    NO_ANSWER("NO_ANSWER"),
    
    BUSY("BUSY"),
    
    REFUSED("REFUSED"),
    
    POWER_OFF("POWER_OFF"),
    
    OUT_OF_SERVICE("OUT_OF_SERVICE");

    private String value;

    RedialConditionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RedialConditionEnum fromValue(String value) {
      for (RedialConditionEnum b : RedialConditionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RedialConditionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RedialConditionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RedialConditionEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RedialConditionEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_REDIAL_CONDITION = "redialCondition";
  @SerializedName(SERIALIZED_NAME_REDIAL_CONDITION)
  private List<RedialConditionEnum> redialCondition = null;

  public static final String SERIALIZED_NAME_REDIAL_INTERVAL = "redialInterval";
  @SerializedName(SERIALIZED_NAME_REDIAL_INTERVAL)
  private Integer redialInterval;

  public static final String SERIALIZED_NAME_REDIAL_TIMES = "redialTimes";
  @SerializedName(SERIALIZED_NAME_REDIAL_TIMES)
  private Integer redialTimes;

  public static final String SERIALIZED_NAME_TENANT_CALL_INTERCEPT_ID = "tenantCallInterceptId";
  @SerializedName(SERIALIZED_NAME_TENANT_CALL_INTERCEPT_ID)
  private Long tenantCallInterceptId;


  public RobotCallJob dialogFlowId(Integer dialogFlowId) {
    
    this.dialogFlowId = dialogFlowId;
    return this;
  }

   /**
   * Get dialogFlowId
   * @return dialogFlowId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDialogFlowId() {
    return dialogFlowId;
  }


  public void setDialogFlowId(Integer dialogFlowId) {
    this.dialogFlowId = dialogFlowId;
  }


  public RobotCallJob isPrior(Boolean isPrior) {
    
    this.isPrior = isPrior;
    return this;
  }

   /**
   * Get isPrior
   * @return isPrior
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsPrior() {
    return isPrior;
  }


  public void setIsPrior(Boolean isPrior) {
    this.isPrior = isPrior;
  }


  public RobotCallJob robotCallJobId(Long robotCallJobId) {
    
    this.robotCallJobId = robotCallJobId;
    return this;
  }

   /**
   * 任务id
   * @return robotCallJobId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "任务id")

  public Long getRobotCallJobId() {
    return robotCallJobId;
  }


  public void setRobotCallJobId(Long robotCallJobId) {
    this.robotCallJobId = robotCallJobId;
  }


  public RobotCallJob dailyEndTime(String dailyEndTime) {
    
    this.dailyEndTime = dailyEndTime;
    return this;
  }

   /**
   * Get dailyEndTime
   * @return dailyEndTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDailyEndTime() {
    return dailyEndTime;
  }


  public void setDailyEndTime(String dailyEndTime) {
    this.dailyEndTime = dailyEndTime;
  }


  public RobotCallJob dailyStartTime(String dailyStartTime) {
    
    this.dailyStartTime = dailyStartTime;
    return this;
  }

   /**
   * Get dailyStartTime
   * @return dailyStartTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDailyStartTime() {
    return dailyStartTime;
  }


  public void setDailyStartTime(String dailyStartTime) {
    this.dailyStartTime = dailyStartTime;
  }


  public RobotCallJob description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public RobotCallJob earlyWarningAlertUsers(List<String> earlyWarningAlertUsers) {
    
    this.earlyWarningAlertUsers = earlyWarningAlertUsers;
    return this;
  }

  public RobotCallJob addEarlyWarningAlertUsersItem(String earlyWarningAlertUsersItem) {
    if (this.earlyWarningAlertUsers == null) {
      this.earlyWarningAlertUsers = new ArrayList<String>();
    }
    this.earlyWarningAlertUsers.add(earlyWarningAlertUsersItem);
    return this;
  }

   /**
   * Get earlyWarningAlertUsers
   * @return earlyWarningAlertUsers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getEarlyWarningAlertUsers() {
    return earlyWarningAlertUsers;
  }


  public void setEarlyWarningAlertUsers(List<String> earlyWarningAlertUsers) {
    this.earlyWarningAlertUsers = earlyWarningAlertUsers;
  }


  public RobotCallJob inactiveTimeList(List<RobotCallJobInactiveTimeList> inactiveTimeList) {
    
    this.inactiveTimeList = inactiveTimeList;
    return this;
  }

  public RobotCallJob addInactiveTimeListItem(RobotCallJobInactiveTimeList inactiveTimeListItem) {
    if (this.inactiveTimeList == null) {
      this.inactiveTimeList = new ArrayList<RobotCallJobInactiveTimeList>();
    }
    this.inactiveTimeList.add(inactiveTimeListItem);
    return this;
  }

   /**
   * Get inactiveTimeList
   * @return inactiveTimeList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<RobotCallJobInactiveTimeList> getInactiveTimeList() {
    return inactiveTimeList;
  }


  public void setInactiveTimeList(List<RobotCallJobInactiveTimeList> inactiveTimeList) {
    this.inactiveTimeList = inactiveTimeList;
  }


  public RobotCallJob name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * 任务名称
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "任务名称")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public RobotCallJob mode(ModeEnum mode) {
    
    this.mode = mode;
    return this;
  }

   /**
   * 任务类型 (AUTO, \&quot;自动任务\&quot;),(MANUAL, \&quot;手动任务\&quot;);
   * @return mode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "任务类型 (AUTO, \"自动任务\"),(MANUAL, \"手动任务\");")

  public ModeEnum getMode() {
    return mode;
  }


  public void setMode(ModeEnum mode) {
    this.mode = mode;
  }


  public RobotCallJob phoneType(PhoneTypeEnum phoneType) {
    
    this.phoneType = phoneType;
    return this;
  }

   /**
   * 号码类型 (MOBILE, \&quot;手机号码\&quot;),(LANDLINE, \&quot;固话\&quot;),(UNFIXED_CALL, \&quot;无主叫\&quot;), (CALL_POLICY_GROUP, \&quot;外呼策略组\&quot;)
   * @return phoneType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "号码类型 (MOBILE, \"手机号码\"),(LANDLINE, \"固话\"),(UNFIXED_CALL, \"无主叫\"), (CALL_POLICY_GROUP, \"外呼策略组\")")

  public PhoneTypeEnum getPhoneType() {
    return phoneType;
  }


  public void setPhoneType(PhoneTypeEnum phoneType) {
    this.phoneType = phoneType;
  }


  public RobotCallJob robotCount(Integer robotCount) {
    
    this.robotCount = robotCount;
    return this;
  }

   /**
   * Get robotCount
   * @return robotCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getRobotCount() {
    return robotCount;
  }


  public void setRobotCount(Integer robotCount) {
    this.robotCount = robotCount;
  }


  public RobotCallJob smsAlertLevel(List<String> smsAlertLevel) {
    
    this.smsAlertLevel = smsAlertLevel;
    return this;
  }

  public RobotCallJob addSmsAlertLevelItem(String smsAlertLevelItem) {
    if (this.smsAlertLevel == null) {
      this.smsAlertLevel = new ArrayList<String>();
    }
    this.smsAlertLevel.add(smsAlertLevelItem);
    return this;
  }

   /**
   * Get smsAlertLevel
   * @return smsAlertLevel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getSmsAlertLevel() {
    return smsAlertLevel;
  }


  public void setSmsAlertLevel(List<String> smsAlertLevel) {
    this.smsAlertLevel = smsAlertLevel;
  }


  public RobotCallJob smsTemplateId(Integer smsTemplateId) {
    
    this.smsTemplateId = smsTemplateId;
    return this;
  }

   /**
   * Get smsTemplateId
   * @return smsTemplateId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSmsTemplateId() {
    return smsTemplateId;
  }


  public void setSmsTemplateId(Integer smsTemplateId) {
    this.smsTemplateId = smsTemplateId;
  }


  public RobotCallJob startTime(String startTime) {
    
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStartTime() {
    return startTime;
  }


  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }


  public RobotCallJob tenantId(Long tenantId) {
    
    this.tenantId = tenantId;
    return this;
  }

   /**
   * Get tenantId
   * @return tenantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getTenantId() {
    return tenantId;
  }


  public void setTenantId(Long tenantId) {
    this.tenantId = tenantId;
  }


  public RobotCallJob smsAlertLevelCode(List<Integer> smsAlertLevelCode) {
    
    this.smsAlertLevelCode = smsAlertLevelCode;
    return this;
  }

  public RobotCallJob addSmsAlertLevelCodeItem(Integer smsAlertLevelCodeItem) {
    if (this.smsAlertLevelCode == null) {
      this.smsAlertLevelCode = new ArrayList<Integer>();
    }
    this.smsAlertLevelCode.add(smsAlertLevelCodeItem);
    return this;
  }

   /**
   * Get smsAlertLevelCode
   * @return smsAlertLevelCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Integer> getSmsAlertLevelCode() {
    return smsAlertLevelCode;
  }


  public void setSmsAlertLevelCode(List<Integer> smsAlertLevelCode) {
    this.smsAlertLevelCode = smsAlertLevelCode;
  }


  public RobotCallJob wechatPushConditionList(List<WechatPushCondition> wechatPushConditionList) {
    
    this.wechatPushConditionList = wechatPushConditionList;
    return this;
  }

  public RobotCallJob addWechatPushConditionListItem(WechatPushCondition wechatPushConditionListItem) {
    if (this.wechatPushConditionList == null) {
      this.wechatPushConditionList = new ArrayList<WechatPushCondition>();
    }
    this.wechatPushConditionList.add(wechatPushConditionListItem);
    return this;
  }

   /**
   * 微信推送条件
   * @return wechatPushConditionList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "微信推送条件")

  public List<WechatPushCondition> getWechatPushConditionList() {
    return wechatPushConditionList;
  }


  public void setWechatPushConditionList(List<WechatPushCondition> wechatPushConditionList) {
    this.wechatPushConditionList = wechatPushConditionList;
  }


  public RobotCallJob redialCondition(List<RedialConditionEnum> redialCondition) {
    
    this.redialCondition = redialCondition;
    return this;
  }

  public RobotCallJob addRedialConditionItem(RedialConditionEnum redialConditionItem) {
    if (this.redialCondition == null) {
      this.redialCondition = new ArrayList<RedialConditionEnum>();
    }
    this.redialCondition.add(redialConditionItem);
    return this;
  }

   /**
   * 重拨条件(CALL_LOSS,\&quot;呼损客户\&quot;),(NO_ANSWER,\&quot;无应答\&quot;),(BUSY,\&quot;忙线中\&quot;),(REFUSED,\&quot;拒接\&quot;),(POWER_OFF,\&quot;关机\&quot;),(OUT_OF_SERVICE,\&quot;停机\&quot;),(CAN_NOT_CONNECT,“无法接通“),(FROM_PHONE_ERROR,\&quot;主叫欠费\&quot;),(SYSTEM_ERROR,\&quot;外呼失败\&quot;)
   * @return redialCondition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "重拨条件(CALL_LOSS,\"呼损客户\"),(NO_ANSWER,\"无应答\"),(BUSY,\"忙线中\"),(REFUSED,\"拒接\"),(POWER_OFF,\"关机\"),(OUT_OF_SERVICE,\"停机\"),(CAN_NOT_CONNECT,“无法接通“),(FROM_PHONE_ERROR,\"主叫欠费\"),(SYSTEM_ERROR,\"外呼失败\")")

  public List<RedialConditionEnum> getRedialCondition() {
    return redialCondition;
  }


  public void setRedialCondition(List<RedialConditionEnum> redialCondition) {
    this.redialCondition = redialCondition;
  }


  public RobotCallJob redialInterval(Integer redialInterval) {
    
    this.redialInterval = redialInterval;
    return this;
  }

   /**
   * 重拨间隔(分钟，取值范围6分钟~24 x 60分钟)
   * @return redialInterval
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "重拨间隔(分钟，取值范围6分钟~24 x 60分钟)")

  public Integer getRedialInterval() {
    return redialInterval;
  }


  public void setRedialInterval(Integer redialInterval) {
    this.redialInterval = redialInterval;
  }


  public RobotCallJob redialTimes(Integer redialTimes) {
    
    this.redialTimes = redialTimes;
    return this;
  }

   /**
   * 重拨次数(取值范围1~10）
   * @return redialTimes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "重拨次数(取值范围1~10）")

  public Integer getRedialTimes() {
    return redialTimes;
  }


  public void setRedialTimes(Integer redialTimes) {
    this.redialTimes = redialTimes;
  }


  public RobotCallJob tenantCallInterceptId(Long tenantCallInterceptId) {
    
    this.tenantCallInterceptId = tenantCallInterceptId;
    return this;
  }

   /**
   * 拦截组id
   * @return tenantCallInterceptId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "拦截组id")

  public Long getTenantCallInterceptId() {
    return tenantCallInterceptId;
  }


  public void setTenantCallInterceptId(Long tenantCallInterceptId) {
    this.tenantCallInterceptId = tenantCallInterceptId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RobotCallJob robotCallJob = (RobotCallJob) o;
    return Objects.equals(this.dialogFlowId, robotCallJob.dialogFlowId) &&
        Objects.equals(this.isPrior, robotCallJob.isPrior) &&
        Objects.equals(this.robotCallJobId, robotCallJob.robotCallJobId) &&
        Objects.equals(this.dailyEndTime, robotCallJob.dailyEndTime) &&
        Objects.equals(this.dailyStartTime, robotCallJob.dailyStartTime) &&
        Objects.equals(this.description, robotCallJob.description) &&
        Objects.equals(this.earlyWarningAlertUsers, robotCallJob.earlyWarningAlertUsers) &&
        Objects.equals(this.inactiveTimeList, robotCallJob.inactiveTimeList) &&
        Objects.equals(this.name, robotCallJob.name) &&
        Objects.equals(this.mode, robotCallJob.mode) &&
        Objects.equals(this.phoneType, robotCallJob.phoneType) &&
        Objects.equals(this.robotCount, robotCallJob.robotCount) &&
        Objects.equals(this.smsAlertLevel, robotCallJob.smsAlertLevel) &&
        Objects.equals(this.smsTemplateId, robotCallJob.smsTemplateId) &&
        Objects.equals(this.startTime, robotCallJob.startTime) &&
        Objects.equals(this.tenantId, robotCallJob.tenantId) &&
        Objects.equals(this.smsAlertLevelCode, robotCallJob.smsAlertLevelCode) &&
        Objects.equals(this.wechatPushConditionList, robotCallJob.wechatPushConditionList) &&
        Objects.equals(this.redialCondition, robotCallJob.redialCondition) &&
        Objects.equals(this.redialInterval, robotCallJob.redialInterval) &&
        Objects.equals(this.redialTimes, robotCallJob.redialTimes) &&
        Objects.equals(this.tenantCallInterceptId, robotCallJob.tenantCallInterceptId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dialogFlowId, isPrior, robotCallJobId, dailyEndTime, dailyStartTime, description, earlyWarningAlertUsers, inactiveTimeList, name, mode, phoneType, robotCount, smsAlertLevel, smsTemplateId, startTime, tenantId, smsAlertLevelCode, wechatPushConditionList, redialCondition, redialInterval, redialTimes, tenantCallInterceptId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RobotCallJob {\n");
    sb.append("    dialogFlowId: ").append(toIndentedString(dialogFlowId)).append("\n");
    sb.append("    isPrior: ").append(toIndentedString(isPrior)).append("\n");
    sb.append("    robotCallJobId: ").append(toIndentedString(robotCallJobId)).append("\n");
    sb.append("    dailyEndTime: ").append(toIndentedString(dailyEndTime)).append("\n");
    sb.append("    dailyStartTime: ").append(toIndentedString(dailyStartTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    earlyWarningAlertUsers: ").append(toIndentedString(earlyWarningAlertUsers)).append("\n");
    sb.append("    inactiveTimeList: ").append(toIndentedString(inactiveTimeList)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    phoneType: ").append(toIndentedString(phoneType)).append("\n");
    sb.append("    robotCount: ").append(toIndentedString(robotCount)).append("\n");
    sb.append("    smsAlertLevel: ").append(toIndentedString(smsAlertLevel)).append("\n");
    sb.append("    smsTemplateId: ").append(toIndentedString(smsTemplateId)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    smsAlertLevelCode: ").append(toIndentedString(smsAlertLevelCode)).append("\n");
    sb.append("    wechatPushConditionList: ").append(toIndentedString(wechatPushConditionList)).append("\n");
    sb.append("    redialCondition: ").append(toIndentedString(redialCondition)).append("\n");
    sb.append("    redialInterval: ").append(toIndentedString(redialInterval)).append("\n");
    sb.append("    redialTimes: ").append(toIndentedString(redialTimes)).append("\n");
    sb.append("    tenantCallInterceptId: ").append(toIndentedString(tenantCallInterceptId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

