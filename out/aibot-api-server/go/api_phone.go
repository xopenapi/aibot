/*
 * AIBot open api
 *
 * aibot api
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// A PhoneApiController binds http requests to an api service and writes the service results to the http response
type PhoneApiController struct {
	service PhoneApiServicer
}

// NewPhoneApiController creates a default api controller
func NewPhoneApiController(s PhoneApiServicer) Router {
	return &PhoneApiController{ service: s }
}

// Routes returns all of the api route for the PhoneApiController
func (c *PhoneApiController) Routes() Routes {
	return Routes{ 
		{
			"GetPhoneList",
			strings.ToUpper("Get"),
			"/apiOpen/v1/phone/getPhoneList",
			c.GetPhoneList,
		},
		{
			"UpdatePhoneInfoByTenantPhoneNumberId",
			strings.ToUpper("Post"),
			"/apiOpen/v1/phone/updatePhoneInfoByTenantPhoneNumberId",
			c.UpdatePhoneInfoByTenantPhoneNumberId,
		},
		{
			"UpdatePhonePriceByTenantPhoneNumberId",
			strings.ToUpper("Post"),
			"/apiOpen/v1/phone/updatePhonePriceByTenantPhoneNumberId",
			c.UpdatePhonePriceByTenantPhoneNumberId,
		},
	}
}

// GetPhoneList - 通过接口可以获取所有可用的外呼线路的列表
func (c *PhoneApiController) GetPhoneList(w http.ResponseWriter, r *http.Request) { 
	result, err := c.service.GetPhoneList()
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// UpdatePhoneInfoByTenantPhoneNumberId - 通过此接口修改线路的归属地、行业、黑名单，只能修改归属客户自己的线路
func (c *PhoneApiController) UpdatePhoneInfoByTenantPhoneNumberId(w http.ResponseWriter, r *http.Request) { 
	body := &UpdatePhoneInfoByTenantPhoneNumberIdReq{}
	if err := json.NewDecoder(r.Body).Decode(&body); err != nil {
		w.WriteHeader(500)
		return
	}
	
	result, err := c.service.UpdatePhoneInfoByTenantPhoneNumberId(*body)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// UpdatePhonePriceByTenantPhoneNumberId - 修改绑定客户线路的价格
func (c *PhoneApiController) UpdatePhonePriceByTenantPhoneNumberId(w http.ResponseWriter, r *http.Request) { 
	result, err := c.service.UpdatePhonePriceByTenantPhoneNumberId()
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}
